#include <stdio.h>
#include <string.h>

#define MAX 100

// Estrutura para armazenar o nome e a idade
typedef struct {
    char nome[50];
    int idade;
} Pessoa;

// Estrutura da fila
typedef struct {
    Pessoa itens[MAX];
    int frente;
    int traseira;
} Fila;

// Função para inicializar a fila
void inicializar(Fila *f) {
    f->frente = 0;
    f->traseira = -1;
}

// Verifica se a fila está cheia
int cheia(Fila *f) {
    return f->traseira == MAX - 1;
}

// Verifica se a fila está vazia
int vazia(Fila *f) {
    return f->frente > f->traseira;
}

// Adiciona uma pessoa na fila
void enfileirar(Fila *f, Pessoa p) {
    if (!cheia(f)) {
        f->itens[++(f->traseira)] = p;
    } else {
        printf("Fila cheia! Não é possível adicionar mais pessoas.\n");
    }
}

// Remove uma pessoa da fila
Pessoa desenfileirar(Fila *f) {
    if (!vazia(f)) {
        return f->itens[(f->frente)++];
    } else {
        Pessoa vazio = {"", -1};
        return vazio;
    }
}

// Exibe a lista de atendimento
void atenderFila(Fila *prioritaria, Fila *normal) {
    Pessoa atendido;

    printf("\nAtendimento prioritário (idade > 60):\n");
    while (!vazia(prioritaria)) {
        atendido = desenfileirar(prioritaria);
        printf("Atendendo: %s (idade: %d)\n", atendido.nome, atendido.idade);
    }

    printf("\nAtendimento normal:\n");
    while (!vazia(normal)) {
        atendido = desenfileirar(normal);
        printf("Atendendo: %s (idade: %d)\n", atendido.nome, atendido.idade);
    }
}

int main() {
    Fila filaPrioritaria, filaNormal;
    inicializar(&filaPrioritaria);
    inicializar(&filaNormal);

    int numPessoas;
    Pessoa p;

    // Entrada de dados
    printf("Digite o número de pessoas na fila: ");
    scanf("%d", &numPessoas);
    getchar();  // Limpa o buffer

    for (int i = 0; i < numPessoas; i++) {
        printf("\nPessoa %d:\n", i + 1);
        printf("Nome: ");
        fgets(p.nome, sizeof(p.nome), stdin);
        p.nome[strcspn(p.nome, "\n")] = '\0';  // Remove o '\n'

        printf("Idade: ");
        scanf("%d", &p.idade);
        getchar();  // Limpa o buffer

        // Enfileira na fila prioritária ou normal
        if (p.idade > 60) {
            enfileirar(&filaPrioritaria, p);
        } else {
            enfileirar(&filaNormal, p);
        }
    }

    // Realiza o atendimento
    atenderFila(&filaPrioritaria, &filaNormal);

    return 0;
}
